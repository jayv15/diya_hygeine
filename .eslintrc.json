{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": ["standard-with-typescript", "plugin:react/recommended"],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "import",
    "@stylistic",
    "import-newlines",
    "sort-destructure-keys",
    "sort-keys-fix",
    "typescript-sort-keys",
    "prefer-arrow-functions"
  ],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      { "assertionStyle": "as" }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "type",
          "internal",
          "object",
          "parent",
          "sibling",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "@/!(components)/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@/components/**",
            "group": "external",
            "position": "after"
          }
        ],
        "newlines-between": "always"
      }
    ],
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "noSortAlphabetically": false,
        "reservedFirst": true
      }
    ],
    "@stylistic/padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      },
      { "blankLine": "always", "next": "return", "prev": "*" },
      { "blankLine": "always", "next": "if", "prev": "*" },
      { "blankLine": "always", "next": "block-like", "prev": "*" }
    ],
    "import-newlines/enforce": [
      "error",
      {
        "items": 20,
        "max-len": 120,
        "semi": false
      }
    ],
    "prefer-arrow-functions/prefer-arrow-functions": [
      "error",
      {
        "allowNamedFunctions": false,
        "classPropertiesAllowed": false,
        "disallowPrototype": false,
        "returnStyle": "unchanged",
        "singleReturnOnly": false
      }
    ],
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "offsetTernaryExpressions": false,
        "SwitchCase": 1
      }
    ],
    "react/jsx-wrap-multilines": ["error"],
    "@stylistic/indent": [
      "error",
      2,
      {
        "ignoredNodes": ["TSTypeParameterInstantiation"],
        "SwitchCase": 1
      }
    ],
    "react/display-name": ["off"],
    "sort-destructure-keys/sort-destructure-keys": ["error"],
    "sort-keys-fix/sort-keys-fix": ["error"],
    "typescript-sort-keys/interface": ["error"],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variableLike",
        "format": ["snake_case", "camelCase", "PascalCase", "UPPER_CASE"],
        "leadingUnderscore": "allow"
      }
    ],
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/comma-dangle": ["error", "always-multiline"]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "ignorePatterns": [".eslintrc.json", "package.json", "tsconfig.json"]
}
